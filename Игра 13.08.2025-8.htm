<!DOCTYPE html>
<html lang="de">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Deutsch A2‚ÄìB2 Trainer (Full)</title>
<style>
  :root { --gap:14px; --bg:#0f1220; --fg:#eef2ff; --panel:#151935; --muted:#283053;
          --ok:#0f3b23; --ok-b:#1dd17c; --bad:#511a21; --bad-b:#ff5c7a; --btn:#1c213a; --btn2:#3a5bff; }
  *{box-sizing:border-box}
  html,body{height:100%}
  body{margin:0;background:var(--bg);color:var(--fg);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif}
  .wrap{max-width:960px;margin:0 auto;padding:20px}
  header{display:flex;flex-wrap:wrap;gap:10px;align-items:center;justify-content:space-between}
  h1{margin:0;font-size:clamp(18px,2.6vw,28px)}
  .controls{display:flex;flex-wrap:wrap;gap:8px;align-items:center}
  select,button,label{font-size:15px}
  select,button{border:0;padding:10px 14px;border-radius:12px;background:var(--btn);color:var(--fg)}
  button.primary{background:var(--btn2)}
  button.secondary{background:#283053}
  button:disabled{opacity:.55;cursor:not-allowed}
  .switch{display:flex;gap:10px;align-items:center}
  .switch input{accent-color:#3a5bff}
  input[type="file"]{display:none}

  .card{margin-top:16px;background:var(--panel);border:1px solid #212853;border-radius:18px;
        padding:clamp(14px,3vw,24px);box-shadow:0 10px 30px rgba(0,0,0,.25);min-height:360px}
  .level-topic{display:flex;gap:10px;flex-wrap:wrap;font-size:13px;opacity:.9;margin-bottom:8px}
  .badge{background:var(--muted);padding:4px 8px;border-radius:999px}
  .prompt{font-size:clamp(20px,4.6vw,34px);margin:8px 0 6px;line-height:1.25;word-break:break-word}
  .example{font-size:clamp(14px,2.5vw,18px);color:#cbd5ff;margin:6px 0 12px}

  .options{display:grid;grid-template-columns:1fr;gap:10px;width:100%}
  @media(min-width:560px){.options{grid-template-columns:1fr 1fr 1fr}}
  .opt{padding:12px;border-radius:12px;background:#1c213a;border:1px solid #2a3367;
       min-height:52px;display:flex;align-items:center;justify-content:center;text-align:center}

  .opt.correct{background:var(--ok);border-color:var(--ok-b)}
  .opt.wrong{background:var(--bad);border-color:var(--bad-b)}

  .footer{display:flex;flex-wrap:wrap;gap:10px;align-items:center;justify-content:space-between;margin-top:14px}
  .progress{font-size:14px;opacity:.85}
  .hint{font-size:13px;opacity:.75}
  .error{margin-top:8px;color:#ff9aa5;font-size:14px;white-space:pre-wrap}
</style>
</head>
<body>
<div class="wrap">
  <header>
    <h1>üá©üá™ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤: —Å–ª–æ–≤–∞ + –ø—Ä–∏–º–µ—Ä—ã + —Ç–µ—Å—Ç</h1>
    <div class="controls">
      <div class="switch">
        <label><input type="radio" name="mode" value="de2ru" checked> DE‚ÜíRU</label>
        <label><input type="radio" name="mode" value="ru2de"> RU‚ÜíDE</label>
      </div>
      <select id="levelSelect" title="–£—Ä–æ–≤–µ–Ω—å">
        <option value="A2">A2</option><option value="B1">B1</option><option value="B2">B2</option>
        <option value="ALL">–í—Å–µ —É—Ä–æ–≤–Ω–∏</option>
      </select>
      <select id="topicSelect" title="–¢–µ–º–∞">
        <option value="all">–í—Å–µ —Ç–µ–º—ã</option>
      </select>
      <button class="secondary" id="btnShuffle">–ü–µ—Ä–µ–º–µ—à–∞—Ç—å</button>
      <button class="secondary" id="btnWrong" disabled>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ—à–∏–±–æ—á–Ω—ã–µ</button>

      <label class="secondary" for="fileInput" style="display:inline-block;padding:10px 14px;border-radius:12px;cursor:pointer;">–ó–∞–≥—Ä—É–∑–∏—Ç—å JSON</label>
      <input type="file" id="fileInput" accept=".json,application/json" />
      <button class="primary" id="btnNext">Next ‚Üí</button>
    </div>
  </header>

  <div class="card">
    <div class="level-topic">
      <span class="badge" id="levelBadge">A2</span>
      <span class="badge" id="topicBadge">Alltag</span>
      <span class="badge" id="metaCount">‚Äî</span>
    </div>
    <div class="prompt" id="prompt">‚Äî</div>
    <div class="example" id="example"></div>
    <div class="options" id="options"></div>
    <div class="footer">
      <div class="progress" id="progress">1 / 1</div>
      <div class="hint">–¢–∞–ø–Ω–∏ –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç—É. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π ‚Äî –∑–µ–ª—ë–Ω—ã–π. –û—à–∏–±–∫–∞ –ø–æ–¥—Å–≤–µ—Ç–∏—Ç –≤–µ—Ä–Ω—ã–π. –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ ‚Äî –∞–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥ –∑–∞ 4‚ÄØ—Å–µ–∫.</div>
    </div>
    <div class="error" id="err"></div>
  </div>
</div>

<script>
/* ========= –ü–ê–†–ê–ú–ï–¢–†–´ ========= */
var AUTONEXT_SECONDS = 4;

/* ========= –ë–ê–ó–ê –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ (–∫–æ—Ä–æ—Ç–∫–∞—è –¥–µ–º–æ; –±–æ–ª—å—à—É—é –ø–æ–¥–ª–∏–≤–∞–µ–º JSON) ========= */
var DEFAULT = {
  A2: [
    {level:"A2",topic:"Alltag",de:"der Alltag",ru:"–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –∂–∏–∑–Ω—å",ex_de:"Im Alltag trinke ich morgens Kaffee.",ex_ru:"–í –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏ —è –ø—å—é –∫–æ—Ñ–µ –ø–æ —É—Ç—Ä–∞–º."},
    {level:"A2",topic:"Zeit",de:"die Stunde",ru:"—á–∞—Å",ex_de:"Der Kurs dauert eine Stunde.",ex_ru:"–ö—É—Ä—Å –¥–ª–∏—Ç—Å—è –æ–¥–∏–Ω —á–∞—Å."},
    {level:"A2",topic:"Essen",de:"der Apfel",ru:"—è–±–ª–æ–∫–æ",ex_de:"Ich esse einen Apfel.",ex_ru:"–Ø –µ–º —è–±–ª–æ–∫–æ."},
    {level:"A2",topic:"Stadt",de:"die Strasse",ru:"—É–ª–∏—Ü–∞",ex_de:"Die Strasse ist laut.",ex_ru:"–£–ª–∏—Ü–∞ —à—É–º–Ω–∞—è."},
    {level:"A2",topic:"Gesundheit",de:"der Arzt",ru:"–≤—Ä–∞—á",ex_de:"Ich habe einen Termin beim Arzt.",ex_ru:"–£ –º–µ–Ω—è –∑–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É."}
  ],
  B1: [
    {level:"B1",topic:"Arbeit",de:"die Voraussetzung",ru:"—É—Å–ª–æ–≤–∏–µ, –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∞",ex_de:"Deutschkenntnisse sind eine Voraussetzung.",ex_ru:"–ó–Ω–∞–Ω–∏–µ –Ω–µ–º–µ—Ü–∫–æ–≥–æ ‚Äî —É—Å–ª–æ–≤–∏–µ."},
    {level:"B1",topic:"Reisen",de:"die Unterkunft",ru:"–∂–∏–ª—å—ë",ex_de:"Wir suchen eine guenstige Unterkunft.",ex_ru:"–ú—ã –∏—â–µ–º –Ω–µ–¥–æ—Ä–æ–≥–æ–µ –∂–∏–ª—å—ë."},
    {level:"B1",topic:"Kommunikation",de:"sich erkundigen",ru:"–æ—Å–≤–µ–¥–æ–º–ª—è—Ç—å—Å—è, —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è",ex_de:"Ich erkundige mich nach dem Preis.",ex_ru:"–Ø —É–∑–Ω–∞—é —Ü–µ–Ω—É."}
  ],
  B2: [
    {level:"B2",topic:"Arbeit",de:"die Herausforderung",ru:"–≤—ã–∑–æ–≤, —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞",ex_de:"Die neue Stelle ist eine Herausforderung.",ex_ru:"–ù–æ–≤–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å ‚Äî –≤—ã–∑–æ–≤."},
    {level:"B2",topic:"Politik",de:"die Massnahme",ru:"–º–µ—Ä–∞",ex_de:"Die Regierung beschliesst neue Massnahmen.",ex_ru:"–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã–µ –º–µ—Ä—ã."},
    {level:"B2",topic:"Wissenschaft",de:"die Erkenntnis",ru:"–ø–æ–∑–Ω–∞–Ω–∏–µ, –≤—ã–≤–æ–¥",ex_de:"Die Studie fuehrt zu neuer Erkenntnis.",ex_ru:"–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–æ–≤–æ–º—É –≤—ã–≤–æ–¥—É."}
  ]
};

/* ========= –°–û–°–¢–û–Ø–ù–ò–ï ========= */
var DATA = JSON.parse(JSON.stringify(DEFAULT));
var mode = "de2ru";       // de2ru | ru2de
var level = "A2";         // A2 | B1 | B2 | ALL
var topic = "all";
var source = [];          // –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
var order = [];           // –ø–æ—Ä—è–¥–æ–∫ –∏–Ω–¥–µ–∫—Å–æ–≤
var pointer = 0;          // –ø–æ–∑–∏—Ü–∏—è
var answeredWrong = {};   // { orderIndex: true }

var countdownTimer = null, countdownTimeout = null, secondsLeft = AUTONEXT_SECONDS;

/* ========= DOM ========= */
var levelSelect   = document.getElementById('levelSelect');
var topicSelect   = document.getElementById('topicSelect');
var btnShuffle    = document.getElementById('btnShuffle');
var btnWrong      = document.getElementById('btnWrong');
var btnNext       = document.getElementById('btnNext');
var fileInput     = document.getElementById('fileInput');

var levelBadge    = document.getElementById('levelBadge');
var topicBadge    = document.getElementById('topicBadge');
var metaCount     = document.getElementById('metaCount');
var promptEl      = document.getElementById('prompt');
var exampleEl     = document.getElementById('example');
var optionsEl     = document.getElementById('options');
var progressEl    = document.getElementById('progress');
var errEl         = document.getElementById('err');

/* ========= –£–¢–ò–õ–´ ========= */
function shuffle(arr){ for(var i=arr.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1)); var t=arr[i]; arr[i]=arr[j]; arr[j]=t;} return arr; }
function flatAllLevels(){ return [].concat(DATA.A2||[], DATA.B1||[], DATA.B2||[]); }

/* ========= –ò–ù–ò–¶ ========= */
(function init(){
  // —Ä–µ–∂–∏–º
  var radios = document.getElementsByName('mode');
  for (var i=0;i<radios.length;i++){
    radios[i].addEventListener('change', function(e){ mode = e.target.value; renderCard(); });
  }
  // —Å–µ–ª–µ–∫—Ç—ã
  levelSelect.addEventListener('change', function(){ level = levelSelect.value; rebuildTopics(); applyFilters(); });
  topicSelect.addEventListener('change', function(){ topic = topicSelect.value; applyFilters(); });

  // –∫–Ω–æ–ø–∫–∏
  btnShuffle.addEventListener('click', function(){ cancelAutoNext(); resetOrder(); renderCard(); });
  btnWrong  .addEventListener('click', function(){ cancelAutoNext(); repeatWrong(); });
  btnNext   .addEventListener('click', function(){ cancelAutoNext(); nextCard(); });

  // –∑–∞–≥—Ä—É–∑–∫–∞ JSON
  fileInput.addEventListener('change', onJsonChosen);

  rebuildTopics();
  applyFilters();
})();

function rebuildTopics(){
  var data = (level==="ALL") ? flatAllLevels() : (DATA[level]||[]);
  var topicsMap = {};
  for (var i=0;i<data.length;i++){ topicsMap[data[i].topic] = true; }
  var topics = Object.keys(topicsMap).sort();
  topicSelect.innerHTML = '<option value="all">–í—Å–µ —Ç–µ–º—ã</option>';
  for (var j=0;j<topics.length;j++){
    var o=document.createElement('option'); o.value=topics[j]; o.textContent=topics[j]; topicSelect.appendChild(o);
  }
  topic = 'all';
}

function applyFilters(){
  var base = (level==="ALL") ? flatAllLevels() : (DATA[level]||[]);
  source = (topic==='all') ? base : base.filter(function(w){ return w.topic===topic; });
  if (!source || !source.length) source = base.length? base : flatAllLevels();
  answeredWrong = {};
  resetOrder();
  renderCard();
}

function resetOrder(){
  order = [];
  for (var i=0;i<source.length;i++) order.push(i);
  shuffle(order);
  pointer = 0;
  btnWrong.disabled = true;
  updateMeta();
}

function updateMeta(){
  progressEl.textContent = Math.min(pointer+1, order.length) + " / " + order.length;
  levelBadge.textContent = (level==="ALL") ? "A2‚ÄìB2" : level;
  topicBadge.textContent = (topic==='all') ? "Alle Themen" : topic;
  metaCount.textContent  = "–≤ –Ω–∞–±–æ—Ä–µ: " + order.length;
}

function renderCard(){
  try{
    if (!order.length){ promptEl.textContent="–ù–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫."; exampleEl.textContent=""; optionsEl.innerHTML=""; return; }

    updateMeta(); errEl.textContent = "";
    var idx = order[pointer];
    var card = source[idx] || {};

    var q = (mode==='de2ru') ? (card.de||"") : (card.ru||"");
    var a = (mode==='de2ru') ? (card.ru||"") : (card.de||"");
    var ex= (mode==='de2ru') ? (card.ex_de||"") : (card.ex_ru||"");

    promptEl.textContent = q || "‚Äî";
    exampleEl.textContent = ex || "";

    // –≤–∞—Ä–∏–∞–Ω—Ç—ã
    var pool = [];
    for (var i=0;i<source.length;i++) if (i!==idx) pool.push(source[i]);
    if (pool.length < 2){ pool = (level==="ALL") ? flatAllLevels() : (DATA[level]||[]).slice(0); }
    shuffle(pool);
    var distractors = [];
    for (var k=0;k<pool.length && distractors.length<2;k++){
      var txt = (mode==='de2ru') ? (pool[k].ru||"") : (pool[k].de||"");
      if (txt && txt!==a) distractors.push(txt);
    }
    while (distractors.length<2) distractors.push("‚Ä¶");

    var candidates = shuffle([a, distractors[0], distractors[1]]);

    optionsEl.innerHTML = "";
    for (var c=0;c<candidates.length;c++){
      (function(txt){
        var b=document.createElement('button');
        b.type="button"; b.className="opt"; b.textContent=txt;
        b.addEventListener('click', function(){ onAnswer(b, txt===a, a); });
        optionsEl.appendChild(b);
      })(candidates[c]);
    }
    resetNextLabel();
  } catch(e){
    errEl.textContent = "–û—à–∏–±–∫–∞: " + (e && e.message ? e.message : e);
  }
}

function onAnswer(btn, correct, rightAnswer){
  var children = optionsEl.children;
  for (var i=0;i<children.length;i++) children[i].disabled = true;

  if (correct){ btn.classList.add('correct'); }
  else{
    btn.classList.add('wrong');
    for (var j=0;j<children.length;j++){
      if (children[j].textContent === rightAnswer) children[j].classList.add('correct');
    }
    answeredWrong[pointer] = true;
    btnWrong.disabled = false;
  }
  startAutoNext();
}

function nextCard(){
  if (pointer < order.length-1){ pointer++; renderCard(); }
  else { progressEl.textContent = "–ì–æ—Ç–æ–≤–æ! " + order.length + " / " + order.length; btnWrong.disabled = !Object.keys(answeredWrong).length; }
}

function repeatWrong(){
  var keys = Object.keys(answeredWrong);
  if (!keys.length) return;
  var wrong = [];
  for (var i=0;i<keys.length;i++){
    var orderIdx = parseInt(keys[i],10);
    wrong.push( source[ order[orderIdx] ] );
  }
  source = wrong.length ? wrong : source;
  answeredWrong = {};
  resetOrder();
  renderCard();
}

/* === –ê–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥ –∏ —Ç–∞–π–º–µ—Ä –Ω–∞ Next === */
function startAutoNext(){
  cancelAutoNext();
  secondsLeft = AUTONEXT_SECONDS;
  setNextLabel(secondsLeft);
  countdownTimer = setInterval(function(){
    secondsLeft--; setNextLabel(secondsLeft);
    if (secondsLeft<=0){ clearInterval(countdownTimer); countdownTimer=null; }
  },1000);
  countdownTimeout = setTimeout(function(){ nextCard(); }, AUTONEXT_SECONDS*1000);
}
function cancelAutoNext(){
  if (countdownTimer){ clearInterval(countdownTimer); countdownTimer=null; }
  if (countdownTimeout){ clearTimeout(countdownTimeout); countdownTimeout=null; }
  resetNextLabel();
}
function setNextLabel(s){ btnNext.textContent = "Next ("+s+")"; }
function resetNextLabel(){ btnNext.textContent = "Next ‚Üí"; }

/* === –ò–º–ø–æ—Ä—Ç JSON ===
–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ (–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤):
[
  {"level":"A2","topic":"Alltag","de":"der Alltag","ru":"–ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –∂–∏–∑–Ω—å","ex_de":"Im Alltag ...","ex_ru":"–í –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π ..."},
  {"level":"B1","topic":"Arbeit","de":"die Voraussetzung","ru":"—É—Å–ª–æ–≤–∏–µ","ex_de":"...","ex_ru":"..."},
  {"level":"B2","topic":"Wirtschaft","de":"die Nachhaltigkeit","ru":"—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å","ex_de":"...","ex_ru":"..."}
]
–ú–æ–∂–Ω–æ –≥—Ä—É–∑–∏—Ç—å 1500‚Äì2000 –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø—Ä–æ–±–ª–µ–º.
*/
function onJsonChosen(evt){
  var file = evt.target && evt.target.files && evt.target.files[0];
  if (!file) return;
  var reader = new FileReader();
  reader.onload = function(){
    try{
      var arr = JSON.parse(reader.result || "[]");
      var added=0, L,row;
      for (var i=0;i<arr.length;i++){
        row = arr[i] || {};
        L = (row.level||"").toUpperCase();
        if (L!=="A2" && L!=="B1" && L!=="B2") continue;
        if (!DATA[L]) DATA[L]=[];
        DATA[L].push({
          level:L,
          topic: row.topic || "Allgemein",
          de:    (row.de||"").toString(),
          ru:    (row.ru||"").toString(),
          ex_de: (row.ex_de||"").toString(),
          ex_ru: (row.ex_ru||"").toString()
        });
        added++;
      }
      if (!added) throw new Error("–í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.");
      rebuildTopics(); applyFilters();
      errEl.textContent = "–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: " + added + " –∑–∞–ø–∏—Å–µ–π.";
      fileInput.value = "";
    } catch(e){
      errEl.textContent = "–û—à–∏–±–∫–∞ JSON: " + (e && e.message ? e.message : e);
    }
  };
  reader.readAsText(file, "utf-8");
}
</script>
</body>
</html>
